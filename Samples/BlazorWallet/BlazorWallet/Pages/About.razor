@page "/about"

<div>
    <h1>About BsvSharp</h1>

    <p>
        <a href="https://github.com/chrissolutions/BsvSharp">BsvSharp</a> is a Bitcoin SV (BSV) library written in C#. The primary aim of BsvSharp is to enable BSV application development in C#. Much the tools used to develop BSV enasbled applications support JavaScript, Java, and C++. Other newer languages like Go, Rust, and Dart are also supported.  The only other tool that supports BSV development is C# is <a href="https://github.com/kzbsv/KzBsv">KzBSV</a>.
    </p>
    <p>
        BsvSharp is a fork of version 0.2.0 of the <a href="https://github.com/kzbsv/KzBsv">KzBSV</a> library developed by TonesNotes. Prior to the development of BsvSharp, the intent was to use KzBSV.  However, KzBSV was incomplete in certain areas and incompatibile with Microsoft Blazor.
    </p>
    <p>
        A major reason why JavaScript is favored by BSV application developers over C# is the ability to use JavaScript to construct front end web clients.  However, with Blazor and WebAssembly, it is now possible to write web client applications using C#.  This permits using the same C# code base on both the front end web clients and on the back end.
    </p>
    <p>
        Another reason for BsvSharp is that KzBSV uses the System.Security.Cryptography library.  Unfortunately due to sandbox constraints, System.Security.Cryptography is not supported in Blazor.  To work around this problem, BsvSharp uses the BouncyCastle library.  BouncyCastle provides cryptographic algorithms used by Bitcoin without any reliance on System.Security.Cryptography.
    </p>
    <p>
        The version of <a href="https://www.bouncycastle.org">BouncyCastle</a> used in BsvSharp was ported from <a href="https://github.com/MetacoSA/NBitcoin/tree/v2.0.0.0">NBitcoin version 2.0.0</a>.  NBitcoin is a .NET version of the BitcoinJ library.  NBitcoin is a mature library that unfortunately follows the BTC Core protocol and carries the technical debt and constraints associated with the BTC Core protocol.  The BouncyCastle portion NBitcoin is well isolated and carries none of the technical debt from BTC Core.
    </p>
    <p>
        BsvSharp derives some parts from <a href="https://github.com/twostack/dartsv">dartsv</a> and from the <a href="https://github.com/moneybutton/bsvmoneybutton/bsv">MoneyButton BSV JavaScript library</a>.
    </p>
    <p>
        The dartsv library, developed by Stephan February of <a href="https://www.twostack.org">TwoStack.org</a>, is a Dart language implementation of the BSV library.
    </p>
    <p>
        <a href="https://github.com/moneybutton/bsvmoneybutton/bsv">MoneyButton BSV JavaScript library</a> was originally developed by Ryan X. Charles.
    </p>
    <p>
        BsvSharp leverages existing BSV implementation to produce a C# library that can work across all environments.
    </p>
    <p>
        BsvSharp began as a learning exercise and is now part of the <a href="https://github.com/chrissolutions/cafelib">CafeLib</a> C# toolset.
    </p>
</div>

@code {
}
